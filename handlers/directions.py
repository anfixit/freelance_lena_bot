import logging
from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message, FSInputFile

from constants import BUTTON_BUY_COURSE, BUTTON_GET_DETAILS, CONSULTATION_URL
from keyboards import get_direction_detail_keyboard, get_directions_keyboard, get_back_to_direction_keyboard
from states import UserStates
from utils.data_loader import get_direction_by_id, load_directions
from utils.image_handler import get_direction_image

router = Router()
DIRECTIONS = load_directions()
logger = logging.getLogger(__name__)


def truncate_text(text: str, max_length: int = 900) -> str:
    """–û–±—Ä–µ–∑–∞–µ—Ç —Ç–µ–∫—Å—Ç –¥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã –¥–ª—è caption."""
    if len(text) <= max_length:
        return text

    truncated = text[:max_length]
    last_period = truncated.rfind('.')
    last_newline = truncated.rfind('\n')

    cut_point = max(last_period, last_newline)
    if cut_point > max_length - 200:
        return text[:cut_point + 1] + "\n\nüí¨ –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏"
    else:
        return text[:max_length] + "..."


@router.message(F.text == "üíº –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞")
async def show_directions(message: Message, state: FSMContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞."""
    await state.set_state(UserStates.choosing_direction)
    await message.answer(
        "üíº <b>–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞</b>\n\n"
        "–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏:",
        reply_markup=get_directions_keyboard(DIRECTIONS)
    )


@router.callback_query(F.data.startswith("dir_"))
async def show_direction_detail(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π."""
    dir_id = callback.data.split("_", 1)[1]
    direction = get_direction_by_id(DIRECTIONS, dir_id)

    if not direction:
        await callback.answer("–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        return

    await state.set_state(UserStates.viewing_direction)
    await state.update_data(current_direction=dir_id)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
    text = f"{direction['emoji']} <b>{direction['title']}</b>\n\n"
    text += direction['description']

    # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
    if 'specializations' in direction:
        text += "\n\n<b>–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:</b>\n"
        for spec in direction['specializations']:
            text += f"‚Ä¢ {spec}\n"

    # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    if dir_id == "task_execution":
        text += f"\n\n<b>üí∞ –î–æ—Ö–æ–¥—ã:</b>\n"
        text += f"‚Ä¢ –û–¥–Ω–æ –∑–∞–¥–∞–Ω–∏–µ: {direction['income_per_task']}\n"
        text += f"‚Ä¢ –í –¥–µ–Ω—å: {direction['daily_tasks']}\n"
        text += f"‚Ä¢ –í –º–µ—Å—è—Ü: {direction['monthly_income']}"
    elif dir_id == "curator_online_school":
        text += f"\n\n<b>üí∞ –î–æ—Ö–æ–¥:</b> {direction['income']}\n"
        text += f"<b>üí∏ –ö–æ–º–∏—Å—Å–∏—è:</b> {direction['commission']}"

    # –û–±—Ä–µ–∑–∞–µ–º —Ç–µ–∫—Å—Ç –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π
    text = truncate_text(text, 900)

    try:
        logger.info(f"–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {dir_id}")
        photo = get_direction_image(dir_id)

        if photo:
            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {dir_id} —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π")
            await callback.message.answer_photo(
                photo=photo,
                caption=text,
                reply_markup=get_direction_detail_keyboard(dir_id)
            )
            # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            try:
                await callback.message.delete()
            except:
                pass
        else:
            # –ï—Å–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –Ω–µ—Ç - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ {dir_id} –ë–ï–ó –∫–∞—Ä—Ç–∏–Ω–∫–∏")
            await callback.message.edit_text(
                text,
                reply_markup=get_direction_detail_keyboard(dir_id)
            )
    except Exception as e:
        # –ü—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–º
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è {dir_id}: {e}")
        await callback.message.edit_text(
            text,
            reply_markup=get_direction_detail_keyboard(dir_id)
        )

    await callback.answer()


@router.callback_query(F.data == "directions")
async def back_to_directions(callback: CallbackQuery, state: FSMContext):
    """–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π."""
    logger.info("üîÑ –ü–æ–ª—É—á–µ–Ω callback 'directions' - –≤–æ–∑–≤—Ä–∞—Ç –∫ —Å–ø–∏—Å–∫—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π")

    try:
        await state.set_state(UserStates.choosing_direction)

        # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–º–æ–∂–µ—Ç –±—ã—Ç—å —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π)
        try:
            await callback.message.delete()
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π
        await callback.message.answer(
            "üíº <b>–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞</b>\n\n"
            "–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏:",
            reply_markup=get_directions_keyboard(DIRECTIONS)
        )
        await callback.answer()
        logger.info("‚úÖ –£—Å–ø–µ—à–Ω–æ –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ —Å–ø–∏—Å–∫—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –∫ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")


@router.callback_query(F.data.startswith("designer_"))
async def show_designer_info(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∏–∑–∞–π–Ω–µ—Ä–µ –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∏."""
    text = "üé® <b>–î–∏–∑–∞–π–Ω–µ—Ä –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∏</b>\n\n"
    text += "–≠—Ç–æ —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –æ—Ñ–æ—Ä–º–ª—è–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ ‚Äî Wildberries, Ozon –∏ –¥—Ä.\n\n"
    text += "–¢—ã –¥–µ–ª–∞–µ—à—å —Å–ª–∞–π–¥—ã: —Ñ–æ—Ç–æ + –∫–æ—Ä–æ—Ç–∫–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ ‚Äî –∏–º–µ–Ω–Ω–æ —Ç–æ, —á—Ç–æ –≤–∏–¥–∏—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—å, –∫–æ–≥–¥–∞ –≤—ã–±–∏—Ä–∞–µ—Ç —Ç–æ–≤–∞—Ä.\n\n"
    text += "–†–∞–±–æ—Ç–∞—Ç—å –º–æ–∂–Ω–æ –¥–∞–∂–µ —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —É–¥–µ–ª—è—è –≤ –¥–µ–Ω—å –æ—Ç 2 —á–∞—Å–æ–≤.\n"
    text += "–ö–æ–º–ø—å—é—Ç–µ—Ä –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω, –æ–ø—ã—Ç –Ω–µ –Ω—É–∂–µ–Ω ‚Äî –≤—Å–µ–º—É –Ω–∞—É—á–∏—à—å—Å—è —Å –Ω—É–ª—è –±–ª–∞–≥–æ–¥–∞—Ä—è –∫—É—Ä—Å–∞–º!\n\n"
    text += "üí∞ <b>–î–æ—Ö–æ–¥—ã:</b>\n"
    text += "üëâüèº –ù–æ–≤–∏—á–∫–∏ –±–µ—Ä—É—Ç –æ—Ç 300‚Äì500 ‚ÇΩ –∑–∞ 1 —Å–ª–∞–π–¥\n"
    text += "üëâüèº –ù–∞ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä –æ–±—ã—á–Ω–æ –∑–∞–∫–∞–∑—ã–≤–∞—é—Ç 5‚Äì10 —Å–ª–∞–π–¥–æ–≤\n"
    text += "üëâüèº –¢–æ –µ—Å—Ç—å —Å –æ–¥–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –≤—ã—Ö–æ–¥–∏—Ç –æ—Ç 2 000 ‚ÇΩ –∏ –≤—ã—à–µ\n"
    text += "üëâüèº –£–∂–µ —Å 1‚Äì2 –∑–∞–∫–∞–∑–æ–≤ –≤ –Ω–µ–¥–µ–ª—é –º–æ–∂–Ω–æ –≤—ã–π—Ç–∏ –Ω–∞ –¥–æ—Ö–æ–¥ 30 000 ‚ÇΩ –≤ –º–µ—Å—è—Ü"

    await callback.message.edit_text(text, reply_markup=get_back_to_direction_keyboard("marketplace_work"))
    await callback.answer()


@router.callback_query(F.data.startswith("manager_"))
async def show_manager_info(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ–Ω–µ–¥–∂–µ—Ä–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤."""
    text = "üë®‚Äçüíº <b>–ú–µ–Ω–µ–¥–∂–µ—Ä –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤</b>\n\n"
    text += "‚Äî —Ä–∞–±–æ—Ç–∞ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –ø—Ä–æ–¥–∞–≤—Ü–∞\n"
    text += "‚Äî —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫, —Å–æ–∑–¥–∞–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤\n"
    text += "‚Äî –æ—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Ç–∑—ã–≤—ã, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω–∞–º–∏, –∑–∞–ø—É—Å–∫ —Ä–µ–∫–ª–∞–º—ã\n\n"
    text += "–ó–¥–µ—Å—å –Ω—É–∂–µ–Ω –∫–æ–º–ø—å—é—Ç–µ—Ä ‚Äî —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è\n\n"
    text += "üí∞ <b>–î–æ—Ö–æ–¥—ã:</b>\n"
    text += "üëâüèº –ù–æ–≤–∏—á–∫–∏ –±–µ—Ä—É—Ç –æ—Ç 10 000 –¥–æ 20 000 ‚ÇΩ –∑–∞ –æ–¥–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –≤ –º–µ—Å—è—Ü\n"
    text += "üëâüèº –û–±—ã—á–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä –≤–µ–¥—ë—Ç 2‚Äì4 –º–∞–≥–∞–∑–∏–Ω–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ\n"
    text += "üëâüèº –¢–æ –µ—Å—Ç—å –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –¥–æ—Ö–æ–¥ –≤—ã—Ö–æ–¥–∏—Ç –æ—Ç 40 000 –¥–æ 80 000 ‚ÇΩ –≤ –º–µ—Å—è—Ü –∏ –≤—ã—à–µ\n"
    text += "(–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ —Ñ–æ—Ä–º–∞—Ç–∞ —Ä–∞–±–æ—Ç—ã)"

    await callback.message.edit_text(text, reply_markup=get_back_to_direction_keyboard("marketplace_work"))
    await callback.answer()


@router.callback_query(F.data.startswith("curator_details_"))
async def show_curator_details(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ —Ä–∞–±–æ—Ç—ã –∫—É—Ä–∞—Ç–æ—Ä–∞."""
    text = "üéì <b>–†–∞–±–æ—Ç–∞ –∫—É—Ä–∞—Ç–æ—Ä–∞ –æ–Ω–ª–∞–π–Ω —à–∫–æ–ª—ã</b>\n\n"
    text += "–†–∞–±–æ—Ç–∞ –∫—É—Ä–∞—Ç–æ—Ä–∞ ‚Äî —ç—Ç–æ:\n"
    text += "‚Äî –≤–µ—Å—Ç–∏ —Å–æ—Ü—Å–µ—Ç–∏ (Instagram, VK, Telegram, Pinterest, Treads)\n"
    text += "‚Äî —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –≤ —Å–≤–æ–∏—Ö —Å–æ—Ü.—Å–µ—Ç—è—Ö –æ —à–∫–æ–ª–µ –∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞—Ö –∑–∞—Ä–∞–±–æ—Ç–∫–∞\n"
    text += "‚Äî –≤—ã—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –≤—Ö–æ–¥—è—â–∏–π –ø–æ—Ç–æ–∫ ‚Äî —á—Ç–æ–±—ã —Ç–µ–±–µ –ø–∏—Å–∞–ª–∏ —Å–∞–º–∏, —Å –ø–æ–º–æ—â—å—é —á–∞—Ç –±–æ—Ç–æ–≤ –∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏\n"
    text += "‚Äî –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Ö, –∫–æ–º—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –∏ –ø–æ–¥–∫–ª—é—á–∞—Ç—å –∫ –æ–±—É—á–µ–Ω–∏—é\n\n"
    text += "–ú–æ–∂–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å –≤—Ä—É—á–Ω—É—é, –∞ –º–æ–∂–Ω–æ ‚Äî –∫–∞–∫ —è ‚Äî –ø–æ–¥–∫–ª—é—á–∏—Ç—å —á–∞—Ç-–±–æ—Ç–∞, —á—Ç–æ–±—ã —á–∞—Å—Ç—å —Ä–∞–±–æ—Ç—ã —à–ª–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.\n\n"
    text += "–ì–ª–∞–≤–Ω–æ–µ ‚Äî –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Ä–∞–∑–±–∏—Ä–∞—Ç—å—Å—è, –Ω–µ –∂–¥–∞—Ç—å –≤–æ–ª—à–µ–±—Å—Ç–≤–∞ –∏ —Ä–µ–∞–ª—å–Ω–æ –¥–µ–ª–∞—Ç—å —à–∞–≥–∏."

    await callback.message.edit_text(text, reply_markup=get_back_to_direction_keyboard("curator_online_school"))
    await callback.answer()


@router.callback_query(F.data.startswith("tasks_details_"))
async def show_tasks_details(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π."""
    direction = get_direction_by_id(DIRECTIONS, 'task_execution')

    text = "‚úÖ <b>–ß—Ç–æ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å</b>\n\n"
    for task in direction['tasks']:
        text += f"‚Äî {task}\n"

    text += "\n<b>–ö—Ç–æ –≤–∞–º –ø–ª–∞—Ç–∏—Ç –∑–∞ —ç—Ç–æ?</b>\n\n"
    for payer in direction['who_pays']:
        text += f"‚Äî
