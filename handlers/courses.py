from aiogram import F, Router
from aiogram.types import CallbackQuery, FSInputFile

from constants import TARIFFS_DESCRIPTION
from keyboards import get_back_to_courses_keyboard, get_tariffs_keyboard
from utils.data_loader import get_direction_by_id, load_directions
from utils.image_handler import get_tariffs_image

router = Router()
DIRECTIONS = load_directions()


def truncate_text(text: str, max_length: int = 900) -> str:
    """–û–±—Ä–µ–∑–∞–µ—Ç —Ç–µ–∫—Å—Ç –¥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã."""
    if len(text) <= max_length:
        return text

    # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –º–µ—Å—Ç–æ –¥–ª—è –æ–±—Ä–µ–∑–∫–∏ (–ø–æ —Ç–æ—á–∫–µ –∏–ª–∏ –ø–µ—Ä–µ–Ω–æ—Å—É —Å—Ç—Ä–æ–∫–∏)
    truncated = text[:max_length]
    last_period = truncated.rfind('.')
    last_newline = truncated.rfind('\n')

    cut_point = max(last_period, last_newline)
    if cut_point > max_length - 200:  # –ï—Å–ª–∏ —Ç–æ—á–∫–∞/–ø–µ—Ä–µ–Ω–æ—Å –Ω–µ —Å–ª–∏—à–∫–æ–º –¥–∞–ª–µ–∫–æ
        return text[:cut_point + 1] + "\n\n... (–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏)"
    else:
        return text[:max_length] + "..."


@router.callback_query(F.data.startswith("courses_"))
async def show_courses(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∫—É—Ä—Å—ã –¥–ª—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è."""
    dir_id = callback.data.split("_", 1)[1]
    direction = get_direction_by_id(DIRECTIONS, dir_id)

    if not direction or 'courses' not in direction:
        await callback.answer("–ö—É—Ä—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return

    text = f"üìö <b>–ö—É—Ä—Å—ã: {direction['title']}</b>\n\n"

    for i, course in enumerate(direction['courses']):
        text += f"üéì <b>{course['name']}</b>\n"

        # –°–æ–∫—Ä–∞—â–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞
        short_description = truncate_text(course['description'], 300)
        text += f"{short_description}\n\n"

        text += f"üí∞ <b>–î–æ—Ö–æ–¥:</b> {course['income']}\n"
        text += f"üí≥ <b>–¶–µ–Ω–∞:</b> {course['price_basic']} / {course['price_with_chat']}\n\n"

        if i < len(direction['courses']) - 1:  # –ù–µ –¥–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫—É—Ä—Å–∞
            text += "---\n\n"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â—É—é –¥–ª–∏–Ω—É
    if len(text) > 900:
        text = truncate_text(text, 900)

    await callback.message.edit_text(text, reply_markup=get_back_to_courses_keyboard(dir_id))
    await callback.answer()


@router.callback_query(F.data.startswith("buy_"))
async def show_tariffs(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞—Ä–∏—Ñ—ã –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π."""
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É —Ç–∞—Ä–∏—Ñ–æ–≤
        photo = get_tariffs_image()

        # –°–æ–∫—Ä–∞—â–∞–µ–º —Ç–µ–∫—Å—Ç –æ–ø–∏—Å–∞–Ω–∏—è —Ç–∞—Ä–∏—Ñ–æ–≤
        short_description = truncate_text(TARIFFS_DESCRIPTION, 800)

        text = f"üí≥ <b>–¢–∞—Ä–∏—Ñ—ã –æ–±—É—á–µ–Ω–∏—è</b>\n\n{short_description}"

        if photo:
            await callback.message.answer_photo(
                photo=photo,
                caption=text,
                reply_markup=get_tariffs_keyboard()
            )
            # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            try:
                await callback.message.delete()
            except:
                pass
        else:
            # –ï—Å–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –Ω–µ—Ç - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
            await callback.message.edit_text(text, reply_markup=get_tariffs_keyboard())

    except Exception as e:
        # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
        text = f"üí≥ <b>–¢–∞—Ä–∏—Ñ—ã –æ–±—É—á–µ–Ω–∏—è</b>\n\n{truncate_text(TARIFFS_DESCRIPTION, 900)}"
        await callback.message.edit_text(text, reply_markup=get_tariffs_keyboard())

    await callback.answer()


# –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Ö—ç–Ω–¥–ª–µ—Ä –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ç–∞—Ä–∏—Ñ–æ–≤ –∏–∑ earning_ways
@router.callback_query(F.data == "earning_training")
async def show_tariffs_from_earning(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞—Ä–∏—Ñ—ã –ø—Ä–∏ –≤—ã–±–æ—Ä–µ '–û–±—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏'."""
    await show_tariffs(callback)
